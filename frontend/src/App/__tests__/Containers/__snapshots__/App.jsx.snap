// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> when authenticated renders correctly 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <LoggedInContainer>
    <div
      className="wrapper"
    >
      <withRouter(Connect(HeaderAuthenticated)) />
      <div
        className="content"
      >
        <Route
          component={[Function]}
          exact={true}
          path="/(|trips)"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/(|trips)"
        />
        <Route
          component={[Function]}
          path="/trips/:id"
        />
        <Route
          component={[Function]}
          path="/trips/:id/edit"
        />
        <Route
          component={[Function]}
          path="/trips/:id/delete"
        />
        <Route
          component={[Function]}
          path="/trips/:id"
        />
        <Route
          component={[Function]}
          path="/trips/:tripId/place/:placeId"
        />
      </div>
      <Footer />
    </div>
  </LoggedInContainer>
</Router>
`;

exports[`<App /> when not authenticated renders correctly 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <div
    className="wrapper"
  >
    <HeaderUnauthenticated />
    <div
      className="content"
    >
      <Switch>
        <Route
          component={[Function]}
          exact={true}
          path="/register"
        />
        <Route
          component={[Function]}
          path="/"
        />
      </Switch>
    </div>
    <Footer />
  </div>
</Router>
`;
